# FILE:            api/UN/CODV2API/eng/openapi.yaml
# LICENSE:         Unlicense
#
# ONLINE VERSION:  https://editor.swagger.io/?url=https://hapi.etica.ai/api/UN/CODV2API/eng/openapi.yaml
#
# README FIRST!:   This file uses OpenAPI syntax (https://www.openapis.org/),
#                  a de facto non-proprietary industry standard to document
#                  APIs.
#                  Consider as starting point:
#                    - Use this online editor https://editor.swagger.io/
#                    - Check this https://openapi.tools/ for compatible tools


openapi: 3.0.3
# NOTE: the current file, as 2021-05-01, uses OpenAPI 3.0 because 3.1 still too
#       new (released 2021-02-15). But some comments already consider future
#       upgrade.
# @see https://spec.openapis.org/oas/v3.0.3
# @see https://spec.openapis.org/oas/v3.1.0

info:
  title: UN OCHA COD Version 2 API (English)
  description: |

    This resource, using [OpenAPI 3.0 specification](https://www.openapis.org/)
    and [dedicated to public domain](https://unlicense.org/), is an
    [HXL-CPLP volunteers user group](https://github.com/HXL-CPLP) initiative
    to document the [COD Version 2 API](https://beta.itos.uga.edu/CODV2API/) in
    Portuguese language. Use of resource (recommended: see
    [Open API Tools](https://openapi.tools/)) to make integrations and
    translations to other natural languages.

    **Important:** HXL-CPLP, translators, volunteers or third-party
    projects using the OpenAPI file are not affiliated with the API providers.
    Use of public domain like licenses (when viable) on derived work is
    encouraged.

    ## About the API

    The API is built for humanitarian information management. Some
    [UN OCHA](https://www.unocha.org/) activities are encapsulated in this
    tool with respect to Common Operational Datasets maintenance.
    Find metadata and location information and gazeteer type output for the
    CODs compatible for applications and for visualizations.
    The scope of the data varies but comprises enhanced CODs processed in
    OCHA workflows for roughly 50 countries (as shown in the
    [COD dashboard](https://cod.unocha.org/)) in the humanitarian support
    sphere. For more information see the
    [About page](https://beta.itos.uga.edu/CODV2API/Home/About).
    Enjoy and comments welcome at ocha-fis-data@un.org.

    ## What are CODs?
    Common Operational Datasets (CODs) are authoritative reference datasets
    needed to support operations and decision-making for all actors in a
    humanitarian response. CODs are 'best available' datasets that ensure
    consistency and simplify the discovery and exchange of key data for the
    humanitarian community.

  version: "2"

  # termsOfService copied from "Privacy" link at https://beta.itos.uga.edu/CODV2API/Home/About
  termsOfService: https://eits.uga.edu/access_and_security/infosec/pols_regs/policies/privacy/
  license:
    name: Several license types
    url: https://data.humdata.org/about/license
  contact:
    name: OCHA Field Information Services
    url: https://data.humdata.org/user/ocha-fis-data
    email: ocha-fis-data@un.org

servers:
  - url: https://beta.itos.uga.edu/CODV2API/api/v1
    description: COD Version 2 API production server

# NOTE: for maintainers, the Team Digitale have a few references about OpenAPI
#       and CKAN. For example, the file
# https://github.com/teamdigitale/api-openapi-samples/blob/master/external-apis/api.daf.teamdigitale.it.yaml.src
paths:

  # NOTE: the will not be documented here
  # /current:

  /locations:
    get:
      # description: >
      #   List available locations(with metadata about each such as preferred name,
      #   iso codes, etc.) and lists of themes available in each location Returns:
      #   location name, iso_3, themes
      responses:
        '200':
          description: >
            List available locations(with metadata about each such as preferred
            name, iso codes, etc.) and lists of themes available in each
            location Returns: location name, iso_3, themes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationMetadataReply'
  /locations/{pCode}:
    parameters:
      - $ref: '#/components/parameters/pCodePathParam'

    get:
      # description: >
      #   List available locations(with metadata about each such as preferred name,
      #   iso codes, etc.) and lists of themes available in each location Returns:
      #   location name, iso_3, themes

      responses:
        '200':
          description: >
            List available locations(with metadata about each such as preferred
            name, iso codes, etc.) and lists of themes available in each
            location Returns: location name, iso_3, themes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationMetadataReply'
        '500':
          $ref: '#/components/schemas/Error500GenericReply'

  # TODO: this endpint needs testing
  # TODO: this endpint needs documentation
  /themes/cod-ab/locations/{pCode}/versions/current:
    parameters:
      - $ref: '#/components/parameters/pCodePathParam'
    get:
      responses:
        '200':
          description: >
            List available locations(with metadata about each such as preferred
            name, iso codes, etc.) and lists of themes available in each
            location Returns: location name, iso_3, themes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationMetadataReply'
        '500':
          $ref: '#/components/schemas/Error500GenericReply'

  # https://beta.itos.uga.edu/CODV2API/Help/Api/GET-api-v1-themes-cod-ab-locations-pCode-versions-versionId
  /themes/cod-ab/locations/{pCode}/versions/{versionId}:
    parameters:
      - $ref: '#/components/parameters/pCodePathParam'
      - $ref: '#/components/parameters/versionIdPathParam'
    get:
      responses:
        '200':
          description: >
            Provides metadata about a specific COD-AB version (number of
            levels, level names, notes about levels, number of units within
            each level, availability of geometry, version dates, etc.) with
            URLs to various downloadables and services.

            example: /api/v1/themes/cod-ab/locations/GUI/versions/0.4
          content:
            application/json:
              # TODO: add exact response type
              schema:
                type: string
        '500':
          $ref: '#/components/schemas/Error500GenericReply'

  # https://beta.itos.uga.edu/CODV2API/Help/Api/GET-api-v1-themes-cod-ab-locations-pCode
  /themes/cod-ab/locations/{pCode}:
    parameters:
      - $ref: '#/components/parameters/pCodeNeedsFixPathParam'
    get:
      responses:
        '200':
          description: >
            Provides metadata about all COD-AB versions at a location
            ( input iso location returns admin0 pcode, name, version number,
            valid_from and valid_to with comments). The parameter takes unique
            location identfier which is a string data type.
            An /api/v1/themes/cod-ab/locations/sdn/

            example: /api/v1/themes/cod-ab/locations/sdn/ JSON
          content:
            application/json:
              # TODO: add exact response schema type (see example)
              schema:
                type: string
              example:
                {
                  "AllVersionsAtLocation": [
                    {
                      "admin0Pcode": "sdn",
                      "admin0Name_ref": " Sudan",
                      "version": "Latest",
                      "valid_from": "2020-08-31T00:00:00",
                      "valid_to": "2021-08-31T00:00:00",
                      "comments": null
                    },
                    {
                      "admin0Pcode": "sdn",
                      "admin0Name_ref": " Sudan",
                      "version": "Latest",
                      "valid_from": "2020-08-31T00:00:00",
                      "valid_to": "2021-08-31T00:00:00",
                      "comments": null
                    }
                  ]
                }
        '500':
          $ref: '#/components/schemas/Error500GenericReply'
  # https://beta.itos.uga.edu/CODV2API/Help/Api/GET-api-v1-themes-cod-ab-locations-pCode-versions-current-level-z-x-y.pbf
  
  # TODO: discover some z b y that would allow test the result.
  /themes/cod-ab/locations/{pCode}/versions/current/{level}/{z}/{x}/{y}.pbf:
    parameters:
      - $ref: '#/components/parameters/pCodeNeedsFixPathParam'
      - name: "level"
        in: path
        description: "Individual level (1 of 0-n)"
        required: true
        schema:
          type: string
        example: "1"
      - name: "z"
        in: path
        description: "(FIXME: add description)"
        required: true
        schema:
          type: string
        example: "1"
      - name: "x"
        in: path
        description: "(FIXME: add description)"
        required: true
        schema:
          type: string
        example: "1"
      - name: "y"
        in: path
        description: "(FIXME: add description)"
        required: true
        schema:
          type: string
        example: "1"
    get:
      responses:
        '200':
          description: >
            Retrieve the vector tiles in protobuf (.pbf) format for input
            country (Pcode) and individual level ( 1 of 0-n). pbf

          content:
            application/json:
              # TODO: add exact response schema type (see example)
              schema:
                type: string
        '500':
          $ref: '#/components/schemas/Error500GenericReply'

        # FIXME: the https://beta.itos.uga.edu/CODV2API/api/v1/themes/cod-ab/locations/SDN/versions/current/1/1/1/1.pbf
        #        return 200 OK (not something like HTTP/1.1 400 Bad Request)
        #        and it's content is text/html, not someting like JSON.
        #            HTTP/1.1 200 OK
        #            Content-Type: text/html; charset=utf-8
        #      
        #            Cannot GET /services/postgis/sdn_adm1/wkb_geometry/vector-tiles/1/1/1.pbf?fields=admin0name_en,admin0pcode,admin1name_en,admin1pcode

  # TODO: https://beta.itos.uga.edu/CODV2API/Help/Api/GET-api-v1-themes-cod-ab-locations-pCode-versions-current-format-level
  # TODO: https://beta.itos.uga.edu/CODV2API/Help/Api/GET-api-v1-Themes
  # TODO: https://beta.itos.uga.edu/CODV2API/Help/Api/GET-api-v1-themes-cod-ab-Lookup-latlng-latlong-wkid-level
  # TODO: https://beta.itos.uga.edu/CODV2API/Help/Api/GET-api-v1-themes-cod-ab-lookup-level-iso2

components:
  schemas:
    LocationMetadataReply:
      # https://beta.itos.uga.edu/CODV2API/Help/Api/GET-api-v1-locations
      # title: |
      #   List available locations (with metadata about each such as preferred
      #   name, iso codes, etc.) and lists of themes available in each location
      #   Returns: location name, iso_3, themes.
      type: object
      required:
        - location_iso
        - location_name
        - Themes
      properties:
        location_iso:
          type: string
          minLength: 3
          maxLength: 3
        location_name:
          type: string
        Themes:
          type: array
          items:
            enum:
              - "Administrative Boundary"
              - "Population Statistics"
        status:
          type: string
          enum:
            - OK
            # TODO: ask when is not OK?
        total:
          type: number
  
    Error500GenericReply:
      type: object
      required:
        - $id
        - message
      properties:
        "$id":
          type: string
        message:
          type: string
      example:
        {
          "$id": "1",
          "message": "An error has occurred."
        }

  parameters:
    pCodePathParam:
      name: pCode
      in: path
      description: "P-code (Place Code) is (TODO: ADD SHORT DESCRIPTION)"
      required: true
      schema:
        type: string
      example: "HN01"

    # FIXME: the https://beta.itos.uga.edu/CODV2API/Help/Api/GET-api-v1-themes-cod-ab-locations-pCode
    #        says its a P-Code, but seems to be an ISO3 country code. We
    #        need to check this.
    pCodeNeedsFixPathParam:
      name: pCode
      in: path
      description: "(TODO: ADD SHORT DESCRIPTION)"
      required: true
      schema:
        type: string
      example: "SDN"

    versionIdPathParam:
      name: versionId
      in: path
      description: "(TODO: ADD SHORT DESCRIPTION)"
      required: true
      schema:
        type: integer