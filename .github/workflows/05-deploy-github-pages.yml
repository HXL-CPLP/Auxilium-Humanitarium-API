# FILE:            .github/workflows/05-deploy-github-pages.yml
#
# @see https://gist.github.com/domenic/ec8b0fc8ab45f39403dd
# @see https://github.com/marketplace/actions/github-pages-action

name: deploy-github-pages

on:
  push:
    branches:
      - main

jobs:
  deploy-github-pages:
    name: deploy-github-pages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download community-contributed translations via Google Sheets from HXL-CPLP
        run: bash _systema/programma/download-hxl-datum.sh

      # @see https://github.com/actions/setup-java#supported-distributions
      - name: "Java installation (required by openapi-generator-cli)"
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "11"

      # @see https://github.com/actions/setup-node
      - name: "Node/NPM installation (required by openapi-generator-cli)"
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: "npm install -g @openapitools/openapi-generator-cli"
        run: npm install -g @openapitools/openapi-generator-cli

      - name: "openapi-generator-cli: generate files"
        run: bash ./_systema/programma/openapi-exportandum.sh

      - name: "Steps before Jekyll: CNAME"
        run: echo "hapi.etica.ai" > ./CNAME

      # On the GitHub deploy, we explicity want it publish generated assets
      - name: "Steps before Jekyll: rm .gitignore"
        run: rm .gitignore


      ### GitHub pages, alternative 1 __________________________________________
      ## If not using customizations beyond GitHub Pages default plugins,
      ## Use this option
      # - name: Deploy to HXL-CPLP/hapi.etica.ai
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     # github_token: ${{ secrets.GITHUB_TOKEN }}
      #     deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
      #     user_name: "github-actions[bot]"
      #     user_email: "github-actions[bot]@users.noreply.github.com"
      #     external_repository: HXL-CPLP/hapi.etica.ai
      #     publish_branch: gh-pages
      #     publish_dir: "./"
      #     destination_dir: ./docs
      #     enable_jekyll: true
      #     # cname: hapi.etica.ai

      ### GitHub pages, alternative 2 __________________________________________
      ## @see https://github.com/jeffreytse/jekyll-deploy-action
      ## This allow use extra customizations on Jekyll

      # Use GitHub Actions' cache to cache dependencies on servers
      # @see https://github.com/jeffreytse/jekyll-deploy-action/issues/14#issuecomment-808108993
      # @see https://github.com/nektos/act/issues/285
      # Error "Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache."
      # - uses: actions/cache@v2
      #   with:
      #     path: vendor/bundle
      #     # key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
      #     key: ${{ runner.os }}-gems-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/Gemfile.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gems-

      # Use GitHub Deploy Action to build and deploy to Github
      - uses: jeffreytse/jekyll-deploy-action@v0.2.1
        with:
          provider: 'github'
          token: ${{ secrets.GH_TOKEN }}        # It's your Personal Access Token(PAT)
          repository: 'HXL-CPLP/hapi.etica.ai'  # Default is current repository
          branch: 'gh-pages'                    # Default is gh-pages for github provider
          jekyll_src: './'                      # Default is root directory
          jekyll_cfg: '_config.yml'             # Default is _config.yml
          # jekyll_baseurl: ''                  # Default is according to _config.yml
          bundler_ver: '>=0'                    # Default is latest bundler version
          cname: 'hapi.etica.ai'                # Default is to not use a cname
          actor: 'eticaaibot'                   # Default is the GITHUB_ACTOR

      # TODO: create prebuild actions
      # @see https://github.com/jeffreytse/jekyll-deploy-action/issues/15#issuecomment-810989660
      # @see https://github.com/helaili/jekyll-action

# Another strategy to deploy github pages with even more control
# @see https://github.com/avillafiorita/jekyll-datapage_gen/issues/71#issuecomment-625532769
# @see https://github.com/JamesIves/github-pages-deploy-action

# ____________________________________________________________________________ #
#### _[por] Como executar localmente o html-proofer [por]_
## @see https://github.com/gjtorikian/html-proofer
# sudo gem install html-proofer
#
# htmlproofer --as-links https://hapi.etica.ai/
# htmlproofer --as-links https://hapi.etica.ai/,https://hapi.etica.ai/por/
#
# htmlproofer --as-links http://127.0.0.1:4000/
# htmlproofer --as-links http://127.0.0.1:4000/,http://127.0.0.1:4000/por/,http://127.0.0.1:4000/eng-Latn/api/UN/reliefweb/


### ./_site/
# htmlproofer --allow-hash-href ./_site/
