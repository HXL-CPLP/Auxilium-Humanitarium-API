# FILE:            HXLProxy-eng.openapi.yaml
# LICENSE:         Unlicense
#
# README FIRST!:   This file uses OpenAPI syntax (https://www.openapis.org/),
#                  a de facto non-proprietary industry standard to document
#                  APIs.
#                  Consider as starting point:
#                    - Use this online editor https://editor.swagger.io/
#                    - Check this https://openapi.tools/ for compatible tools


openapi: 3.0.3
# NOTE: the current file, as 2021-05-01, uses OpenAPI 3.0 because 3.1 still too
#       new (released 2021-02-15). But some comments already consider future
#       upgrade.
# @see https://spec.openapis.org/oas/v3.0.3
# @see https://spec.openapis.org/oas/v3.1.0

info:
  title: HXL-Proxy
  description: >
    Note: the HXL-proxy, strictly speaking, is intended to be used as human
    interface, not as REST API. So even if this OpenAPI go beyond draft, is
    unlikely that will be as relevant as the official documentation at
    https://github.com/HXLStandard/hxl-proxy/wiki.

    BUT the documentation for API usage is at
    https://github.com/HXLStandard/hxl-proxy/wiki/API.

  version: "3" # 3 because CKAN uses 3, see https://docs.ckan.org/en/2.9/api/
  termsOfService: https://data.humdata.org/about/terms
  license:
    name: Several license types
    url: https://data.humdata.org/about/license
    # TODO: while OpenAPI 3.0 don't enforce SPDX https://spdx.org/licenses/
    #       the OpenAPI 3.1 recommends/requires SPDX. So this will need ajusts
  contact:
    name: HXLStandard
    url: https://github.com/HXLStandard/hxl-proxy/issues
    email: hxlproject@googlegroups.com
    # https://groups.google.com/g/hxlproject

servers:
  - url: https://proxy.hxlstandard.org/
    description: HXLStandard production server
  - url: http://localhost:5000/
    description: HXL-proxy localhost docker
    # https://github.com/HXLStandard/hxl-proxy/blob/master/docker_files/docker-compose.yml


paths: {}

# # NOTE: for maintainers, the Team Digitale have a few references about OpenAPI
# #       and CKAN. For example, the file
# # https://github.com/teamdigitale/api-openapi-samples/blob/master/external-apis/api.daf.teamdigitale.it.yaml.src
# paths:
#   /package_list:
#     get:
#       parameters:
#         - in: query
#           name: limit
#           description: >
#             If given, the list of datasets will be broken into pages of at most
#             `limit` datasets per page and only one page will be returned at a time
#           required: false
#           schema:
#             type: integer
#             default: 250
#             # NOTE: is possible to not use a default and display EVERYTING.
#             #       But this can freeze user browser even if a 200kb response.
#         - in: query
#           name: offset
#           description: >
#             When `limit` is given, the `offset` to start returning packages from
#           required: false
#           schema:
#             type: integer
#       responses:
#         '200':
#           description: >
#             Return a list of the names of the siteâ€™s datasets (packages).

#             See also:
#               - https://docs.ckan.org/en/2.9/api/#ckan.logic.action.get.package_list
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items:
#                   $ref: '#/components/schemas/CkanReply'
#   /tag_list: {}
#   # TODO: /tag_list 
#   # https://docs.ckan.org/en/latest/api/index.html#ckan.logic.action.get.tag_list

#   /tag_show: {}
#   # TODO: /tag_show 
#   # https://docs.ckan.org/en/latest/api/index.html#ckan.logic.action.get.tag_show


# components:
#   # NOTE: OpenAPI 3.0 seems to not allow use $ref outside schemas
#   #       (but OpenAPI 3.1 allow it), but the teamdigitale/api-openapi-samples
#   #       uses this as part of build scripts. We will keep it simple without
#   #       use extra steps.
#   # responses:
#   #   CkanResponse:
#   #     description: >-
#   #       Standard Ckan Reply. See http://docs.ckan.org/en/latest/api/index.html.

#   schemas:
#     CkanReply:
#       # From teamdigitale/api-openapi-samples
#       type: object
#       required:
#         - result
#         - success
#         - help
#       properties:
#         success:
#           type: string
#         result:
#           anyOf:
#             - type: object
#             - type: array
#         error:
#           type: object
#         help:
#           type: string
#           format: url
#         status:
#           type: boolean
#           enum:
#             - true
#             - false
